upstream app {
  server $UPSTREAM_SERVER:$UPSTREAM_PORT;
}

server {
  listen 80;
  server_name nginx;
  root $RAILS_ROOT/public;
  index  index.html;

  # define where Nginx should write its logs
  access_log $RAILS_ROOT/log/nginx.access.log;
  error_log $RAILS_ROOT/log/nginx.error.log;

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  location ~ ^/(assets|packs)/ {
    try_files $uri @app;
    access_log off;
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  location / {
    try_files $uri @app;
  }
  location @app {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://app;
  }
}


# 들어오는 HTTP 요청을 처리하는 방법을 정의하는 Nginx 구성 파일입니다. 구성은 업스트림과 서버의 두 부분으로 구성됩니다.
#
#
# 업스트림 섹션은 호스트 이름이 "web"인 서버의 포트 3000에서 수신 대기하는 "app"이라는 백엔드 서버를 정의합니다. 이 서버는 아마도 들어오는 요청을 처리할 웹 애플리케이션을 실행하고 있을 것입니다.
#
#
# 서버 섹션은 Nginx 서버의 동작을 정의합니다. 포트 80에서 수신하고 호스트 이름 "nginx"에 대한 요청을 처리합니다. 파일 제공을 위한 루트 디렉토리는 RAILS_ROOT/public 디렉토리로 설정되며 기본 색인 파일은 index.html입니다.
#
#
# 다음 두 섹션에서는 특정 파일에 대한 요청을 거부하는 규칙을 정의합니다. 첫 번째 섹션은 점으로 시작하는 모든 파일(예: .gitignore와 같은 숨겨진 파일)에 대한 요청을 거부하고 두 번째 섹션은 확장자가 .rb 또는 .log인 파일에 대한 요청을 거부합니다.
#
#
# 다음 섹션에서는 JavaScript, CSS 및 이미지와 같은 정적 자산에 대한 요청을 처리합니다. 자산 또는 팩 디렉터리에서 파일을 제공하려고 시도하고, 파일을 찾을 수 없는 경우 요청을 업스트림 섹션에 정의된 "앱" 서버로 전달합니다. 또한 캐싱 및 성능을 개선하기 위해 일부 헤더를 설정합니다.
#
#
# 마지막 섹션은 다른 모든 요청을 처리합니다. 요청된 파일을 직접 제공하려고 시도하고 찾을 수 없으면 요청을 "앱" 서버로 전달합니다.
#
#
# @app 위치 블록은 이전 위치 블록에서 처리할 수 없는 모든 요청에 ​​대한 폴백으로 사용됩니다. 클라이언트의 IP 주소와 호스트 이름을 전달하도록 일부 헤더를 설정하고, 프록시 리디렉션을 비활성화하고, 요청을 업스트림 섹션에 정의된 "앱" 서버로 전달합니다.
#
#
# 전반적으로 이 구성은 정적 자산을 직접 제공하고 동적 요청을 웹 애플리케이션을 실행하는 백엔드 서버로 전달하도록 설계되었습니다.

