#version: '3.8'
#
#services:
#  db:
#    container_name: db
#    image: mysql:8.0
#    restart: always
#    env_file:
#      - .env
#    volumes:
#      - db-data:/var/lib/mysql
#  web:
#    container_name: web
#    build: .
#    env_file:
#      - .env
#    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
#    depends_on:
#      - db
#  nginx:
#    container_name: nginx
#    restart: always
#    build:
#      context: ./nginx
#      dockerfile: Dockerfile
#    ports:
#      - "3050:80"
#    depends_on:
#      - web
#volumes:
#  db-data:


version: '3'

services:
  db:
    image: mysql:8.0
    container_name: db
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    env_file:
      - .env
    networks:
      - app-network
  web:
    container_name: web
    build: .
    env_file:
      - .env
#    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    tty: true
    stdin_open: true
    volumes:
      - public:/myapp/public
    depends_on:
      - db
    networks:
      - app-network
  nginx:
#    image: nginx:latest
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx.Dockerfile
    ports:
      - "3050:80"
    restart: always
    volumes:
      - public:/myapp/public
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#      - ./public:/usr/share/nginx/public:cached
#      - ./log/nginx:/var/log/nginx
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  public:
    driver: local